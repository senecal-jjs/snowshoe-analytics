user  nginx;
worker_processes 1;
error_log  /dev/stdout info;
error_log off;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout main;
    access_log off;
    keepalive_timeout 65;
    keepalive_requests 100000;
    tcp_nopush on;
    tcp_nodelay on;

    server {
        listen 80;
        server_name snowshoeanalytics.com www.snowshoeanalytics.com;

        location / {
            return 301 https://$host$request_uri;
        } 

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }   
    }

    server {
        listen 443 ssl;
        server_name snowshoeanalytics.com www.snowshoeanalytics.com;

        ssl_certificate /etc/letsencrypt/live/snowshoeanalytics.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/snowshoeanalytics.com/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        proxy_pass_header Server;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # app comes from /etc/hosts, Docker added it for us!
            proxy_pass http://react:80/;
        }

        location ^~ /odds-machine/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # app comes from /etc/hosts, Docker added it for us!
            proxy_pass http://flaskapp:5000/odds-machine/;
        }
    }
}
